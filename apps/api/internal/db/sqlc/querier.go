// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CreateAccount(ctx context.Context, arg CreateAccountParams) (AuthAccount, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (AuthSession, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (AuthUser, error)
	DeleteAccount(ctx context.Context, arg DeleteAccountParams) error
	DeleteExpiredSession(ctx context.Context) error
	DeleteSessionByToken(ctx context.Context, token string) error
	DeleteUser(ctx context.Context, id uuid.UUID) error
	GetAccountByProvider(ctx context.Context, arg GetAccountByProviderParams) (AuthAccount, error)
	GetAccountsByUserID(ctx context.Context, userID uuid.UUID) ([]AuthAccount, error)
	GetSessionByToken(ctx context.Context, token string) (AuthSession, error)
	GetSessionsByUserID(ctx context.Context, userID uuid.UUID) ([]AuthSession, error)
	GetUserByEmail(ctx context.Context, email string) (AuthUser, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (AuthUser, error)
	UpdateSessionExpiration(ctx context.Context, arg UpdateSessionExpirationParams) error
	UpdateTokens(ctx context.Context, arg UpdateTokensParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
	UpdateUserOnboarded(ctx context.Context, id uuid.UUID) error
}

var _ Querier = (*Queries)(nil)
