// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: event_roles.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const getEventStaff = `-- name: GetEventStaff :many
SELECT u.id, u.name, u.email, u.email_verified, u.onboarded, u.image, u.created_at, u.updated_at, u.role
FROM auth.users u
JOIN event_roles er ON u.id = er.user_id
WHERE er.event_id = $1
  AND er.role IN ('admin', 'staff')
`

func (q *Queries) GetEventStaff(ctx context.Context, eventID uuid.UUID) ([]AuthUser, error) {
	rows, err := q.db.Query(ctx, getEventStaff, eventID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []AuthUser{}
	for rows.Next() {
		var i AuthUser
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Email,
			&i.EmailVerified,
			&i.Onboarded,
			&i.Image,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.Role,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
