// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: event_interest_submissions.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const addEmail = `-- name: AddEmail :one
INSERT INTO event_interest_submissions (
    event_id,
    email,
    source
) VALUES (
    $1, $2, $3
)
RETURNING id, event_id, email, created_at, source
`

type AddEmailParams struct {
	EventID uuid.UUID `json:"event_id"`
	Email   string    `json:"email"`
	Source  *string   `json:"source"`
}

// Adds a new email to the mailing list for a specific user and event.
// The unique constraint on (event_id, user_id) will prevent duplicates.
// Returns the newly created email record.
func (q *Queries) AddEmail(ctx context.Context, arg AddEmailParams) (EventInterestSubmission, error) {
	row := q.db.QueryRow(ctx, addEmail, arg.EventID, arg.Email, arg.Source)
	var i EventInterestSubmission
	err := row.Scan(
		&i.ID,
		&i.EventID,
		&i.Email,
		&i.CreatedAt,
		&i.Source,
	)
	return i, err
}
