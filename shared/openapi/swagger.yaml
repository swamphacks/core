openapi: 3.0.0
x-stoplight:
  id: nutabra7kvljn
info:
  title: SwampHacks Core
  version: '1.0'
  description: SwampHacks is University of Florida's flagship hackathon. This is the API interface for SwampHacks's server and resources.
  contact:
    name: Alexander Wang
    url: 'https://github.com/AlexanderWangY'
    email: alexanderwang@ufl.edu
  termsOfService: 'https://app.swamphacks.com/terms'
  license:
    name: APACHE LICENSE 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
servers:
  - url: 'http://localhost:8080'
    description: Local Development
  - url: 'https://dev.api.swamphacks.com'
    description: Staging
  - url: 'https://api.swamphacks.com'
    description: Production
paths:
  /v1/auth/callback:
    post:
      summary: authentication callback
      tags:
        - authentication
      responses:
        '200':
          description: 'OK: User is logged in successfully. For when the redirect field is empty.'
          headers:
            Set-Cookie:
              schema:
                type: string
              description: Sets a sh_session cookie to signify auth status
        '302':
          description: 'Found: Logged in and redirected to a requested location'
          headers:
            Set-Cookie:
              schema:
                type: string
              description: Sets a sh_session cookie to signify auth status
        '400':
          description: 'Bad Request: Something went wrong with the request queries or their properties'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad code or state:
                  value:
                    code: A100
                    error: invalid_callback
                    message: Missing or malformed code or state in callback
                Example 1:
                  value:
                    code: A103
                    error: unknown_provider
                    message: '{{provider}} is not a supported provider'
        '403':
          description: 'Forbidden: Something went wrong verifying identity or authenticating.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Invalid Nonce:
                  value:
                    code: A101
                    error: nonce_mismatch
                    message: Nonce in state does not match cookie
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Create user fail:
                  value:
                    code: A401
                    error: create_user_failed
                    message: Something went wrong trying to create a user.
        '502':
          description: 'Bad Gateway: Authenticating OAuth server did not respond or user does not exist '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Failed gateway:
                  value:
                    code: A105
                    error: oauth_gateway
                    message: 'Failed to retrieve OAuth profile from {{provider}}'
      operationId: post-v1-auth-callback
      x-stoplight:
        id: ct784ewqj8k3i
      description: This route is used for OAuth authentication methods to verify and login/create an account.
      security: []
      parameters:
        - schema:
            type: string
          in: query
          name: code
          description: The OAuth code passed back from the provider. Part of the PKCE flow.
        - schema:
            type: string
          in: query
          name: state
          description: 'The state containing a base64 encoded version of the nonce, provider, and redirect url.'
        - schema:
            type: string
          in: cookie
          name: sh_auth_nonce
          description: The nonce for comparing against the callback state decoded to prevent CSRF attacks.
  /v1/auth/me:
    get:
      summary: authenticated user
      tags:
        - authentication
      responses:
        '200':
          description: 'OK: Current user data returned'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Normal user:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: John Apple
                    email: user@example.com
                    email_verified: true
                    image: 'https://example.com/cat.jpeg'
                    role: user
                Admin user:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: Mark Scout
                    email: user@lumoncorp.com
                    email_verified: true
                    image: 'http://lumoncorp.com/marks_pfp.jpeg'
                    role: admin
        '401':
          $ref: '#/components/responses/Unauthenticated'
        5XX:
          description: 'Server Error: Something went terribly wrong on our end.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example 1:
                  value:
                    code: A003
                    error: auth_error
                    message: Something went wrong with the authentication resource
      operationId: get-v1-auth-me
      x-stoplight:
        id: oruu4ylz0rtu8
      description: Get the currently authenticated user's information.
      security:
        - sh_session: []
      parameters:
        - schema:
            type: string
          in: cookie
          name: sh_session
          description: The authenticated session token/id
  /v1/auth/session:
    get:
      summary: authenticated session
      tags:
        - authentication
      responses:
        '200':
          description: 'OK: Returns current user''s session'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
              examples:
                Sample Session:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    user_id: a169451c-8525-4352-b8ca-070dd449a1a5
                    expires_at: '2019-08-24T14:15:22Z'
                    ip_address: 127.0.0.1
                    user_agent: Mozilla/5.0 (Windows NT 10.0) Chrome/114.0.5735.199
        '401':
          $ref: '#/components/responses/Unauthenticated'
        5XX:
          description: 'Server Error: Something went terribly wrong on our end.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Unauthenticated:
                  value:
                    code: A003
                    error: auth_error
                    message: Something went wrong with the authentication resource
      operationId: get-v1-auth-session
      x-stoplight:
        id: 0x3dlw4bsrfgc
      description: Retrieves current authenticated user's session information
      security:
        - sh_session: []
      parameters:
        - schema:
            type: string
          in: cookie
          name: sh_session
          description: The authenticated session token/id
components:
  schemas:
    ErrorResponse:
      title: ErrorResponse
      x-stoplight:
        id: dqn6jntknlmx1
      type: object
      properties:
        code:
          type: string
          x-stoplight:
            id: rokhi9z518d42
        error:
          type: string
          x-stoplight:
            id: 2ukqzp5a2tmaf
        message:
          type: string
          x-stoplight:
            id: avnmp3mkbsdvj
      x-examples:
        Example 1:
          code: A001
          error: invalid_op
          message: That was an invalid operation. Please try something else.
      description: 'This model is returned on server errors, it returns an error code (lookup code definitions in documentation), an error key, and a message.'
    User:
      title: User
      x-stoplight:
        id: whmmi4ofk7mzg
      type: object
      properties:
        id:
          type: string
          x-stoplight:
            id: dutrkqcbamq9i
          format: uuid
        name:
          type: string
          x-stoplight:
            id: cxqkrp9hrxeot
        email:
          type: string
          x-stoplight:
            id: hij8zc4tnmx42
          format: email
        email_verified:
          type: boolean
          x-stoplight:
            id: mreztycs4cpkw
        image:
          type: string
          x-stoplight:
            id: pahswvz0rf655
          format: uri
          nullable: true
        role:
          $ref: '#/components/schemas/Role'
    Role:
      title: Role
      x-stoplight:
        id: 9700f7uzvtgay
      type: string
      enum:
        - user
        - admin
    Session:
      title: Session
      x-stoplight:
        id: 1ojcr8cwkebdk
      type: object
      properties:
        id:
          type: string
          x-stoplight:
            id: vvmu11dsmwp2m
          format: uuid
        user_id:
          type: string
          x-stoplight:
            id: udxze31ht0b6g
          format: uuid
        expires_at:
          type: string
          x-stoplight:
            id: txciknpnhjrcu
          format: date-time
        ip_address:
          type: string
          x-stoplight:
            id: rg0dyly1hs7lm
          nullable: true
        user_agent:
          type: string
          x-stoplight:
            id: nwik1r68jxwyt
          nullable: true
  securitySchemes:
    sh_session:
      type: http
      scheme: basic
  responses:
    Unauthenticated:
      description: 'Unauthenticated: Requester is not currently authenticated.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            Unauthenticated:
              value:
                code: A001
                error: unauth
                message: Not authenticated
      headers: {}
    Unauthorized:
      description: 'Unauthorized: User does not have access to this resource.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            No access:
              value:
                code: A002
                error: forbidden
                message: You don't have access to this resource
security:
  - {}
  - sh_session: []
tags:
  - name: authentication
    description: Features used to authenticate or provide authenticated data
